version: '3'
services:
  service-a:
    container_name: input
    build:
      context: service_a
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - otel-collector
      - service-b

  service-b:
    container_name: orquestrador
    build:
      context: service_b
      dockerfile: Dockerfile
    ports:
      - "8181:8181"
    depends_on:
      - otel-collector


  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"

  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector:latest
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger
      - zipkin

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    restart: always
    ports:
      - "16686:16686"
      - "14268"
      - "14250"

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
